---
import type { CollectionEntry } from 'astro:content'
import type { Frontmatter } from '../config'
import type { Sidebar } from '../config'
import { getCollection } from 'astro:content'
import Base from './base.astro'
import PageContent from '../components/pagecontent.astro'
import LeftSidebar from '../components/leftsidebar.astro'
import RightSidebar from '../components/rightsidebar.astro'
import NextPrev from '../components/nextprev.astro'
import * as CONFIG from '../config'
import type { MarkdownHeading } from 'astro'

type Props = {
  frontmatter: CollectionEntry<'course'>['data']
  headings: MarkdownHeading[]
}

const { frontmatter, headings } = Astro.props
const currentPage = Astro.url.toString()
const currentFile = `src/content/${Astro.url.pathname
  .replace(import.meta.env.BASE_URL, '')
  .replace(/\/$/, '')}.md`
const githubEditUrl = `${CONFIG.GITHUB_EDIT_URL}/${currentFile}`

const allDocs = await getCollection('course')
const docs = allDocs
  .sort((a, b) => a.data.weight - b.data.weight)
  .filter(p => !p.data.draft)
const sections = Array.from(
  new Set(docs.map(doc => doc.data.section))
) as string[]
let sidebar = {} as Sidebar
sections.forEach(
  section =>
    (sidebar[section] = docs
      .filter(doc => doc.data.section == section)
      .map(doc => ({
        text: doc.data.title,
        link: import.meta.env.BASE_URL + 'bio/' + doc.slug,
      })))
)
let prev: CollectionEntry<'course'> | undefined
let next: CollectionEntry<'course'> | undefined
docs.forEach((doc, i) => {
  if (currentPage.search(doc.slug) >= 0) {
    if (i > 0) {
      prev = docs[i - 1]
    }
    if (i < docs.length - 1) {
      next = docs[i + 1]
    }
  }
})
const basefm: Frontmatter = {
  draft: frontmatter.draft,
  title: frontmatter.title,
  description: frontmatter.description,
  publishDate: new Date(),
}
---

<Base frontmatter={basefm}>
  <main
    class="relative mx-auto flex max-w-8xl justify-center sm:px-2 lg:px-8 xl:px-12 bg-white dark:bg-slate-900"
  >
    <aside id="grid-left" class="grid-sidebar" title="Site Navigation">
      <LeftSidebar currentPage={currentPage} />
    </aside>
    <div id="grid-main">
      <PageContent
        frontmatter={frontmatter}
        headings={headings}
        githubEditUrl={githubEditUrl}
      >
        <section
          class="prose prose-slate max-w-none dark:prose-invert dark:text-slate-400 prose-headings:scroll-mt-28 prose-headings:font-display prose-headings:font-normal lg:prose-headings:scroll-mt-[8.5rem] prose-lead:text-slate-500 dark:prose-lead:text-slate-400 prose-a:font-semibold dark:prose-a:text-sky-400 prose-a:no-underline prose-a:shadow-[inset_0_-2px_0_0_var(--tw-prose-background,#fff),inset_0_calc(-1*(var(--tw-prose-underline-size,4px)+2px))_0_0_var(--tw-prose-underline,theme(colors.sky.300))] hover:prose-a:[--tw-prose-underline-size:6px] dark:[--tw-prose-background:theme(colors.slate.900)] dark:prose-a:shadow-[inset_0_calc(-1*var(--tw-prose-underline-size,2px))_0_0_var(--tw-prose-underline,theme(colors.sky.800))] dark:hover:prose-a:[--tw-prose-underline-size:6px] prose-pre:rounded-xl prose-pre:bg-slate-900 prose-pre:shadow-lg dark:prose-pre:bg-slate-800/60 dark:prose-pre:shadow-none dark:prose-pre:ring-1 dark:prose-pre:ring-slate-300/10 dark:prose-hr:border-slate-800"
        >
          <slot />
        </section>
        <NextPrev
          base={import.meta.env.BASE_URL + 'course/'}
          prev={prev}
          next={next}
        />
      </PageContent>
    </div>
    <aside id="grid-right" class="grid-sidebar" title="Table of Contents">
      <RightSidebar headings={headings} githubEditUrl={githubEditUrl} />
    </aside>
  </main>
</Base>
