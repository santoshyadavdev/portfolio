---
import type { CollectionEntry } from "astro:content";
import type { Frontmatter } from "../config";
import { getCollection } from "astro:content";
import Base from "../layouts/base.astro";
import BlogHero from "../components/bloghero.astro";
import NextPrev from "../components/nextprev.astro";
import Images from "../components/images.astro";

export interface Props {
  frontmatter: Frontmatter;
}

const { frontmatter } = Astro.props;

const currentPage = Astro.url.pathname;
const allPosts = await getCollection("blog");
const posts = allPosts
  .sort((a, b) => +b.data.publishDate - +a.data.publishDate)
  .filter((p) => !p.data.draft);
let prev: CollectionEntry<"blog"> | undefined;
let next: CollectionEntry<"blog"> | undefined;
posts.forEach((post, i) => {
  if (currentPage.search(post.slug) >= 0) {
    if (i > 0) {
      prev = posts[i - 1];
    }
    if (i < posts.length - 1) {
      next = posts[i + 1];
    }
  }
});
---

<Base frontmatter={frontmatter}>
  <main class="dark:bg-black">
    <article class="post">
      <header>
        <BlogHero frontmatter={frontmatter} />
      </header>
      <section
        class="px-4 lg:px-0 my-8 max-w-screen-lg mx-auto prose prose-purple lg:prose-xl dark:prose-invert"
      >
        {frontmatter.images && <Images images={frontmatter.images} />}
        <slot />
      </section>
    </article>
  </main>
  <NextPrev
    slot="before-footer"
    base={import.meta.env.BASE_URL + "blog/"}
    prev={prev}
    next={next}
  />
</Base>
