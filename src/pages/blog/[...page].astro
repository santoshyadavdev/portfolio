---
import type { Page, PaginateFunction } from 'astro'
import type { CollectionEntry } from 'astro:content'
import type { Frontmatter } from '../../config'
import { getCollection } from 'astro:content'
import { SiteMetadata, PAGE_SIZE } from '../../config'
import Base from '../../layouts/base.astro'
import PageHero from '../../components/pagehero.astro'
import BlogRoll from '../../components/blogroll.astro'
import PaginateControl from '../../components/paginatecontrol.astro'
import coverSVG from '../../images/svg/undraw/santosh_yadav.svg'
import socialImage from '../../images/undraw/santosh_yadav.jpg'
export interface Props {
  page: Page<CollectionEntry<'blog'>>
}

const { page } = Astro.props

const frontmatter: Frontmatter = {
  title:
    'Blog' +
    (page.size < page.total
      ? ' (page ' + page.currentPage + ' of ' + page.lastPage + ')'
      : ''),
  description: 'View my articles.',
  coverSVG: coverSVG,
  socialImage: socialImage,
  publishDate: SiteMetadata.buildTime,
}

const currentPage = Astro.url.pathname.replace(/(\/\d*)?\/$/, '')
export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction
}) {
  const allPosts = await getCollection('blog')
  const posts = allPosts
    .sort((a, b) => +b.data.publishDate - +a.data.publishDate)
    .filter(p => !p.data.draft)

  return paginate(posts, { pageSize: PAGE_SIZE })
}
---

<Base frontmatter={frontmatter}>
  <header>
    <PageHero
      title={frontmatter.title}
      description={frontmatter.description}
      coverSVG={frontmatter.coverSVG}
      socialImage={frontmatter.socialImage}
    >
      <PaginateControl base={currentPage} page={page} />
    </PageHero>
  </header>
  <main class="mt-10 bg-gray-100 dark:bg-gray-900">
    <BlogRoll posts={page.data} />
  </main>
</Base>
