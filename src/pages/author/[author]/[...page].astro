---
import type { PaginateFunction, Page } from "astro";
import type { CollectionEntry } from "astro:content";
import {
  Frontmatter,
  SiteMetadata,
  authorDetail,
  PAGE_SIZE,
} from "../../../config";
import { getCollection } from "astro:content";
import Base from "../../../layouts/base.astro";
import Img from "../../../components/img.astro";
import PageHero from "../../../components/pagehero.astro";
import BlogRoll from "../../../components/blogroll.astro";
import PaginateControl from "../../../components/paginatecontrol.astro";

export interface Props {
  page: Page<CollectionEntry<"blog">>;
}

const { author } = Astro.params;
const { page } = Astro.props;

const detail = authorDetail(author as string);

const frontmatter: Frontmatter = {
  title:
    "Author: " +
    author +
    (page.size < page.total
      ? " (page " + page.currentPage + " of " + page.lastPage + ")"
      : ""),
  description:
    detail.description +
    ". " +
    "Showing articles " +
    (page.start + 1) +
    "-" +
    (page.end + 1) +
    " (total " +
    page.total +
    ")",
  coverSVG: "../images/svg/undraw/undraw_short_bio.svg",
  socialImage: "../images/undraw/undraw_short_bio.png",
  publishDate: SiteMetadata.buildTime,
};

const currentPage = Astro.url.pathname.replace(/(\/\d*)?\/$/, "");

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction;
}) {
  const allPosts = await getCollection("blog");
  const posts = allPosts
    .sort((a, b) => +b.data.publishDate - +a.data.publishDate)
    .filter((p) => !p.data.draft);

  const authors = Array.from(
    new Set(posts.flatMap((post) => post.data.author)),
  );

  return authors.flatMap((author) => {
    return paginate(
      posts.filter((post) => author && post.data.author?.includes(author)),
      {
        params: { author },
        pageSize: PAGE_SIZE,
      },
    );
  });
}
---

<Base frontmatter={frontmatter}>
  <header>
    <PageHero
      title={frontmatter.title}
      description={frontmatter.description}
      coverSVG={frontmatter.coverSVG}
      socialImage={frontmatter.socialImage}
    >
      <Img
        src={detail.image}
        alt={detail.name}
        class="mt-4 h-32 w-32 rounded-full object-center object-cover"
      />
      <PaginateControl base={currentPage} page={page} />
    </PageHero>
  </header>
  <main class="mt-10 bg-gray-100 dark:bg-gray-900">
    <BlogRoll posts={page.data} />
  </main>
</Base>
